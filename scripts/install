#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers
source ynh_add_secure_repos__2

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url="/Microsoft-Server-ActiveSync"

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_print_info "Validating installation parameters..."

final_path=/usr/share/z-push
config_path=/etc/z-push
final_logpath=/var/log/z-push
statedir=/var/lib/z-push

test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Register (book) web path
ynh_webpath_register $app $domain $path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_print_info "Storing installation settings..."

ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path $path_url
ynh_app_setting_set $app final_path $final_path
ynh_app_setting_set $app config_path $config_path
ynh_app_setting_set $app final_logpath $final_logpath
ynh_app_setting_set $app statedir $statedir

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_print_info "Installing dependencies..."

ynh_add_repo --uri="http://repo.z-hub.io/z-push:/final/Debian_9.0/" --suite="/" --component="" --name="$app"
ynh_pin_repo --package="*" --pin="origin \"repo.z-hub.io\"" --name="$app"
mkdir -p "/etc/apt/trusted.gpg.d"
wget -qO - http://repo.z-hub.io/z-push:/final/Debian_9.0/Release.key | apt-key --keyring /etc/apt/trusted.gpg.d/$app.gpg add -
ynh_package_update

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_print_info "Configuring nginx web server..."

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_print_info "Configuring php-fpm..."

# Create a dedicated php-fpm config
ynh_add_fpm_config

#=================================================
# MODIFY A CONFIG FILE
#=================================================

cp ../conf/policies.ini $config_path/policies.ini
cp ../conf/z-push.conf.php $config_path/z-push.conf.php
cp ../conf/galsearch-ldap.conf.php $config_path/galsearch-ldap.conf.php
cp ../conf/autodiscover.conf.php $config_path/autodiscover.conf.php

# Configuration of timezone
ynh_replace_string "__TIMEZONE__" "$(cat /etc/timezone)" "$config_path/z-push.conf.php"
ynh_replace_string "__TIMEZONE__" "$(cat /etc/timezone)" "$config_path/autodiscover.conf.php"


# Enable caldav carddav support
if yunohost app list --installed -f baikal | grep -q id ; then
	echo "Detected Baikal"
	baikaldomain=$(ynh_app_setting_get baikal domain)
	baikalpath=$(ynh_app_setting_get baikal path)
	baikalpath=${baikalpath%/}
	
	# Configuration of backend
	ynh_replace_string "__BACKEND_PROVIDER__" "BackendCombined" "$config_path/z-push.conf.php"
	ynh_replace_string "__BACKEND_PROVIDER__" "BackendCombined" "$config_path/autodiscover.conf.php"
	cp ../conf/combined.conf.php $config_path/combined.conf.php
	
	# Configuration of caldav
	cp ../conf/caldav.conf.php $config_path/caldav.conf.php
	ynh_replace_string "__DOMAIN__" "$baikaldomain" "$config_path/caldav.conf.php"
	ynh_replace_string "__CALDAV_PATH__" "$baikalpath/cal.php/calendars/%u/" "$config_path/caldav.conf.php"
	
	# Configuration of carddav
	cp ../conf/carddav.conf.php $config_path/carddav.conf.php
	ynh_replace_string "__DOMAIN__" "$baikaldomain" "$config_path/carddav.conf.php"
	ynh_replace_string "__CARDDAV_PATH__" "$baikalpath/card.php/addressbooks/%u/" "$config_path/carddav.conf.php"
	ynh_replace_string "__CARDDAV_DEFAULT_PATH__" "$baikalpath/card.php/addressbooks/%u/default" "$config_path/carddav.conf.php"
	
	# Checksum of config files		
	ynh_store_file_checksum "$config_path/combined.conf.php"
	ynh_store_file_checksum "$config_path/caldav.conf.php"
	ynh_store_file_checksum "$config_path/carddav.conf.php"
	
elif yunohost app list --installed -f nextcloud | grep -q id ; then
	echo "Detected NextCloud"
	nextclouddomain=$(ynh_app_setting_get nextcloud domain)
	nextcloudpath=$(ynh_app_setting_get nextcloud path)
	nextcloudpath=${nextcloudpath%/}
	
	# Configuration of backend
	ynh_replace_string "__BACKEND_PROVIDER__" "BackendCombined" "$config_path/z-push.conf.php"
	ynh_replace_string "__BACKEND_PROVIDER__" "BackendCombined" "$config_path/autodiscover.conf.php"
	cp ../conf/combined.conf.php $config_path/combined.conf.php
	
	# Configuration of caldav
	cp ../conf/caldav.conf.php $config_path/caldav.conf.php
	ynh_replace_string "__DOMAIN__" "$nextclouddomain" "$config_path/caldav.conf.php"
	ynh_replace_string "__CALDAV_PATH__" "$nextcloudpath/remote.php/dav/calendars/%u/personal/" "$config_path/caldav.conf.php"
	
	# Configuration of carddav
	cp ../conf/carddav.conf.php $config_path/carddav.conf.php
	ynh_replace_string "__DOMAIN__" "$nextclouddomain" "$config_path/carddav.conf.php"
	ynh_replace_string "__CARDDAV_PATH__" "$nextcloudpath/remote.php/dav/addressbooks/users/%u/contacts/" "$config_path/carddav.conf.php"
	ynh_replace_string "__CARDDAV_DEFAULT_PATH__" "$nextcloudpath/remote.php/dav/addressbooks/users/%u/contacts/" "$config_path/carddav.conf.php"	
	
	# Checksum of config files		
	ynh_store_file_checksum "$config_path/combined.conf.php"
	ynh_store_file_checksum "$config_path/caldav.conf.php"
	ynh_store_file_checksum "$config_path/carddav.conf.php"
else
	# Configuration of backend
	# Configuration of backend
	ynh_replace_string "__BACKEND_PROVIDER__" "BackendIMAP" "$config_path/z-push.conf.php"
	ynh_replace_string "__BACKEND_PROVIDER__" "BackendIMAP" "$config_path/autodiscover.conf.php"		
fi

	# Configuration of imap
	cp ../conf/imap.conf.php $config_path/imap.conf.php
	ynh_replace_string "__DOMAIN__" "$domain" "$config_path/imap.conf.php"
	ynh_replace_string "__IMAP_MEETING_USE_CALDAV__" "false" "$config_path/imap.conf.php"
	
	# Checksum of config files
	ynh_store_file_checksum "$config_path/imap.conf.php"

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum "$config_path/policies.ini"
ynh_store_file_checksum "$config_path/z-push.conf.php"
ynh_store_file_checksum "$config_path/galsearch-ldap.conf.php"
ynh_store_file_checksum "$config_path/autodiscover.conf.php"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions to app files
chown -R www-data:www-data $final_path
chown -R www-data:www-data $final_logpath
chown -R www-data:www-data $statedir

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_print_info "Configuring log rotation..."

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

#=================================================
# SETUP SSOWAT
#=================================================
ynh_print_info "Configuring SSOwat..."

# Make app public
ynh_app_setting_set $app unprotected_uris "/"

#=================================================
# RELOAD NGINX
#=================================================
ynh_print_info "Reloading nginx web server..."

systemctl reload nginx

#=================================================
# END OF SCRIPT
#=================================================

ynh_print_info "Installation of $app completed"
