#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN

path="/Microsoft-Server-ActiveSync"
app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_print_info "Validating installation parameters..."

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die "This path already contains a folder"

statedir="/home/yunohost.app/$app"
test ! -e "$statedir" || ynh_die "This path already contains a folder"

final_logpath="/var/log/$app"

# Register (book) web path
ynh_webpath_register $app $domain $path

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_print_info "Storing installation settings..."

ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path $path

ynh_app_setting_set $app statedir "$statedir"
ynh_app_setting_set $app final_logpath "$final_logpath"

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_print_info "Installing dependencies..."

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_print_info "Setting up source files..."

ynh_app_setting_set $app final_path $final_path
# Download, check integrity, uncompress and patch the source from app.src
mkdir "$final_path"
mkdir "$final_path/tmp"
ynh_setup_source "$final_path/tmp"
cp -a "$final_path/tmp/src/." "$final_path/."
rm -r "$final_path/tmp"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_print_info "Configuring nginx web server..."

### `ynh_add_nginx_config` will use the file conf/nginx.conf

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_print_info "Configuring php-fpm..."

# Create a dedicated php-fpm config
ynh_add_fpm_config

#=================================================
# SPECIFIC SETUP
#=================================================
# CREATE STATEDIR AND FINAL_LOGPATH
#=================================================
ynh_print_info "Creating statedir and final_logpath..."

mkdir -p $statedir
chown -R www-data:www-data $statedir


mkdir -p $final_logpath
chown -R www-data:www-data $final_logpath


#=================================================
# MODIFY A CONFIG FILE
#=================================================

# Configuration
ynh_replace_string __TIMEZONE__ $(cat /etc/timezone) ../conf/config.php
ynh_replace_string __FINAL_LOGPATH__ $final_logpath ../conf/config.php

# Storage of state_dir in /home/yunohost.app
# This contains the sync status in between device and z-push
ynh_replace_string __STATEDIR__ $statedir ../conf/config.php


# Enable caldav carddav support
if yunohost app list --installed -f baikal | grep -q id ; then
	echo "Detected Baikal"
	caldavdomain=$(ynh_app_setting_get baikal domain)
	caldavpath=$(ynh_app_setting_get baikal path)
	caldavpath=${caldavpath%/}

	# Configuration of backend
	ynh_replace_string __BACKEND__ BackendCombined ../conf/config.php

	# Configuration baikal
	ynh_replace_string __BAIKALDOMAIN__ $caldavdomain ../conf/backend/config*.php
	ynh_replace_string __BAIKALPATH__ $caldavpath ../conf/backend/config*.php
	ynh_replace_string __DOMAINTOCHANGE__ $domain ../conf/backend/config-imap.php
	ynh_replace_string __FLAGTOCHANGE__ true ../conf/backend/config-imap.php

	# Copy config
	cp ../conf/config.php $final_path/config.php
	cp ../conf/backend/config-imap.php $final_path/backend/imap/config.php
	cp ../conf/backend/config-carddav.php $final_path/backend/carddav/config.php
	cp ../conf/backend/config-caldav.php $final_path/backend/caldav/config.php
	cp ../conf/backend/config-combined.php $final_path/backend/combined/config.php
else
	# Configuration of backend
	ynh_replace_string __BACKEND__ BackendIMAP ../conf/config.php

	# Copy config
	cp ../conf/config.php $final_path/config.php
	ynh_replace_string __DOMAINTOCHANGE__ $domain ../conf/backend/config-imap.php
	ynh_replace_string __FLAGTOCHANGE__ false ../conf/backend/config-imap.php
	cp ../conf/backend/config-imap.php $final_path/backend/imap/config.php
fi

#Copy XMLElement.php
ln -s /usr/share/awl/inc/XML* /var/www/$app/include/

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions to app files
chown -R www-data: $final_path

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_print_info "Configuring log rotation..."


# Use logrotate to manage application logfile(s)
ynh_use_logrotate

#=================================================
# SETUP SSOWAT
#=================================================
ynh_print_info "Configuring SSOwat..."

# Make app public
ynh_app_setting_set $app skipped_uris "/"

#=================================================
# RELOAD NGINX
#=================================================
ynh_print_info "Reloading nginx web server..."

systemctl reload nginx

#=================================================
# END OF SCRIPT
#=================================================

ynh_print_info "Installation of $app completed"
