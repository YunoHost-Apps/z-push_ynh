#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_print_info "Loading installation settings..."

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get $app domain)
path_url=$(ynh_app_setting_get $app path)
final_path=$(ynh_app_setting_get $app final_path)
statedir=$(ynh_app_setting_get $app statedir)
final_logpath=$(ynh_app_setting_get $app final_logpath)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_print_info "Ensuring downward compatibility..."

# Fix is_public as a boolean value
if [ "$is_public" = "Yes" ]; then
	ynh_app_setting_set $app is_public 1
	is_public=1
elif [ "$is_public" = "No" ]; then
	ynh_app_setting_set $app is_public 0
	is_public=0
fi

# If final_path doesn't exist, create it
if [ -z $final_path ]; then
	final_path=/var/www/$app
	ynh_app_setting_set $app final_path $final_path
fi

if [ -z "$statedir" ];
then
   statedir="/home/yunohost.app/$app"
   ynh_app_setting_set "$app" statedir "$statedir"
   mkdir -p $statedir
else
   ynh_print_info "${statedir} exists, we don't create it."
fi

if [ -z "$final_logpath" ];
then
   final_logpath="/var/log/$app"
   ynh_app_setting_set "$app" final_logpath "$final_logpath"
   mkdir -p $final_logpath
else
   ynh_print_info "${final_logpath} exists, we don't create it."
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================
ynh_print_info "Backing up the app before upgrading (may take a while)..."

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	# restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_print_info "Upgrading source files..."

# Download, check integrity, uncompress and patch the source from app.src
mkdir "$final_path/tmp"
ynh_setup_source "$final_path/tmp"
cp -a "$final_path/tmp/src/." "$final_path/."
ynh_secure_remove "$final_path/tmp"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_print_info "Upgrading nginx web server configuration..."

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# UPGRADE DEPENDENCIES
#=================================================
ynh_print_info "Upgrading dependencies..."

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_print_info "Making sure dedicated system user exists..."

# Create a dedicated user (if not existing)
ynh_system_user_create $app

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_print_info "Upgrading php-fpm configuration..."

# Create a dedicated php-fpm config
ynh_add_fpm_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# MODIFY A CONFIG FILE
#=================================================

# Configuration
ynh_replace_string __TIMEZONE__ $(cat /etc/timezone) ../conf/config.php
ynh_replace_string __TIMEZONE__ $(cat /etc/timezone) ../conf/backend/config-autodiscover.php
ynh_replace_string __FINAL_LOGPATH__ $final_logpath ../conf/config.php
ynh_replace_string __FINAL_LOGPATH__ $final_logpath ../conf/backend/config-autodiscover.php

# Storage of state_dir in /home/yunohost.app
# This contains the sync status in between device and z-push
ynh_replace_string __STATEDIR__ $statedir ../conf/config.php

# Enable caldav carddav support
if yunohost app list --installed -f baikal | grep -q id ; then
	echo "Detected Baikal"
	bailkaldomain=$(ynh_app_setting_get baikal domain)
	bailkalpath=$(ynh_app_setting_get baikal path)
	bailkalpath=${bailkalpath%/}

	# Configuration of backend
	ynh_replace_string __BACKEND__ BackendCombined ../conf/config.php
	ynh_replace_string __BACKEND__ BackendCombined ../conf/backend/config-autodiscover.php

	# Configuration baikal
	ynh_replace_string __CALDAV_SERVER__ "${bailkaldomain}" ../conf/backend/config-caldav.php
	ynh_replace_string __CALDAV_PATH__ "${bailkalpath}/cal.php/calendars/%u/" ../conf/backend/config-caldav.php
	ynh_replace_string __CALDAV_PERSONAL__ "default" ../conf/backend/config-caldav.php

	ynh_replace_string __CARDDAV_SERVER__ "${bailkaldomain}" ../conf/backend/config-carddav.php
	ynh_replace_string __CARDDAV_PATH__ "${bailkalpath}/card.php/addressbooks/%u/" ../conf/backend/config-carddav.php
	ynh_replace_string __CARDDAV_DEFAULT_PATH__ "${bailkalpath}/card.php/addressbooks/%u/default" ../conf/backend/config-carddav.php

	ynh_replace_string __IMAP_SERVER__ "${domain}" ../conf/backend/config-imap.php
	ynh_replace_string __FLAGTOCHANGE__ true ../conf/backend/config-imap.php

	# Copy config
	cp ../conf/backend/config-caldav.php $final_path/backend/caldav/config.php
	cp ../conf/backend/config-carddav.php $final_path/backend/carddav/config.php
	cp ../conf/backend/config-imap.php $final_path/backend/imap/config.php
	cp ../conf/backend/config-combined.php $final_path/backend/combined/config.php

elif yunohost app list --installed -f nextcloud | grep -q id ; then
	echo "Detected NextCloud"
	nextclouddomain=$(ynh_app_setting_get nextcloud domain)
	nextcloudpath=$(ynh_app_setting_get nextcloud path)
	nextcloudpath=${nextcloudpath%/}

	# Configuration of backend
	ynh_replace_string __BACKEND__ BackendCombined ../conf/config.php
	ynh_replace_string __BACKEND__ BackendCombined ../conf/backend/config-autodiscover.php

	# Configuration nextcloud
	ynh_replace_string __CALDAV_SERVER__ "${nextclouddomain}" ../conf/backend/config-caldav.php
	ynh_replace_string __CALDAV_PATH__ "${nextcloudpath}/remote.php/dav/calendars/%u/" ../conf/backend/config-caldav.php
	ynh_replace_string __CALDAV_PERSONAL__ "personal" ../conf/backend/config-caldav.php

	ynh_replace_string __CARDDAV_SERVER__ "${nextclouddomain}" ../conf/backend/config-carddav.php
	ynh_replace_string __CARDDAV_PATH__ "${nextcloudpath}/remote.php/dav/addressbooks/users/%u/contacts/" ../conf/backend/config-carddav.php
	ynh_replace_string __CARDDAV_DEFAULT_PATH__ "${nextcloudpath}/remote.php/dav/addressbooks/users/%u/contacts/" ../conf/backend/config-carddav.php

	ynh_replace_string __IMAP_SERVER__ "${domain}" ../conf/backend/config-imap.php
	ynh_replace_string __FLAGTOCHANGE__ true ../conf/backend/config-imap.php

	# Copy config
	cp ../conf/backend/config-caldav.php $final_path/backend/caldav/config.php
	cp ../conf/backend/config-carddav.php $final_path/backend/carddav/config.php
	cp ../conf/backend/config-imap.php $final_path/backend/imap/config.php
	cp ../conf/backend/config-combined.php $final_path/backend/combined/config.php
else
	# Configuration of backend
	ynh_replace_string __BACKEND__ BackendIMAP ../conf/config.php
	ynh_replace_string __BACKEND__ BackendIMAP ../conf/backend/config-autodiscover.php

	# Configuration imap
	ynh_replace_string __IMAP_SERVER__ "${domain}" ../conf/backend/config-imap.php
	ynh_replace_string __FLAGTOCHANGE__ false ../conf/backend/config-imap.php

	# Copy config
	cp ../conf/backend/config-imap.php $final_path/backend/imap/config.php	
fi

# Copy config
cp ../conf/config.php $final_path/config.php
cp ../conf/backend/config-autodiscover.php $final_path/autodiscover/config.php
cp ../conf/backend/config-searchldap.php $final_path/backend/searchldap/config.php

# Fixstates to avoid full resync of devices after version upgrades
$final_path/z-push-admin.php -a fixstates

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_print_info "Upgrading logrotate configuration..."

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate --non-append

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions on app files
chown -R $app: $final_path

chown -R $app: $statedir
chown -R $app: $final_logpath

#=================================================
# SETUP SSOWAT
#=================================================
ynh_print_info "Upgrading SSOwat configuration..."

# Make app public
ynh_app_setting_set $app unprotected_uris "/"
domain_regex=$(echo "$domain" | sed 's@-@.@g')
ynh_app_setting_set $app skipped_regex "$domain_regex/[Aa]uto[Dd]iscover/.*"

#=================================================
# RELOAD NGINX
#=================================================
ynh_print_info "Reloading nginx web server..."

systemctl reload nginx

#=================================================
# END OF SCRIPT
#=================================================

ynh_print_info "Upgrade of $app completed"
